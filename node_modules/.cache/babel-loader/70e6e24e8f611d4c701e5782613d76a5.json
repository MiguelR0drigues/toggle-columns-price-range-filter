{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miguel Rodrigues\\\\Desktop\\\\Mindera\\\\d4c5977c-5dde-44a4-90ab-263812cef0db\\\\src\\\\components\\\\ToggleColumns.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToggleColumns = props => {\n  const onCheckboxClick = e => {\n    //props.columns[e] ? props.columns[e] = false : props.columns[e] = true \n    var checkbox_val = document.getElementById('checkbox_' + e).value;\n    if (checkbox_val === \"hide\") {\n      var all_col = document.getElementsByClassName(e);\n      for (var i = 0; i < all_col.length; i++) {\n        all_col[i].style.display = \"none\";\n      }\n      document.getElementById(e + \"_head\").style.display = \"none\";\n      document.getElementById('checkbox_' + e).value = \"show\";\n    } else {\n      console.log('else');\n      var all_col = document.getElementsByClassName(e);\n      for (var i = 0; i < all_col.length; i++) {\n        all_col[i].style.display = \"table-cell\";\n      }\n      document.getElementById(e + \"_head\").style.display = \"table-cell\";\n      document.getElementById('checkbox_' + e).value = \"hide\";\n    }\n  };\n\n  // TODO: Bind handlers and props\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle-columns\",\n    children: Object.keys(props.columns).map((column, index) => {\n      var _props$columns;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: column,\n          children: column\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultChecked: (_props$columns = props.columns) !== null && _props$columns !== void 0 && _props$columns[column] ? true : false,\n          id: 'checkbox_' + column,\n          name: column,\n          value: \"hide\",\n          onChange: () => {\n            onCheckboxClick(this.id);\n          },\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = ToggleColumns;\nvar _c;\n$RefreshReg$(_c, \"ToggleColumns\");","map":{"version":3,"names":["React","ToggleColumns","props","onCheckboxClick","e","checkbox_val","document","getElementById","value","all_col","getElementsByClassName","i","length","style","display","console","log","Object","keys","columns","map","column","index","id"],"sources":["C:/Users/Miguel Rodrigues/Desktop/Mindera/d4c5977c-5dde-44a4-90ab-263812cef0db/src/components/ToggleColumns.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport const ToggleColumns = (props) => {\r\n  const onCheckboxClick = (e) => {\r\n    //props.columns[e] ? props.columns[e] = false : props.columns[e] = true \r\n    var checkbox_val=document.getElementById('checkbox_'+e).value;\r\n    if(checkbox_val===\"hide\")\r\n    {\r\n      var all_col=document.getElementsByClassName(e);\r\n      for(var i=0;i<all_col.length;i++)\r\n      {\r\n      all_col[i].style.display=\"none\";\r\n      }\r\n      document.getElementById(e+\"_head\").style.display=\"none\";\r\n      document.getElementById('checkbox_'+e).value=\"show\";\r\n      \r\n    }\r\n      \r\n    else\r\n    {\r\n      console.log('else')\r\n      var all_col=document.getElementsByClassName(e);\r\n      for(var i=0;i<all_col.length;i++)\r\n      {\r\n      all_col[i].style.display=\"table-cell\";\r\n      }\r\n      document.getElementById(e+\"_head\").style.display=\"table-cell\";\r\n      document.getElementById('checkbox_'+e).value=\"hide\";\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n  // TODO: Bind handlers and props\r\n  return (\r\n    <div className=\"toggle-columns\">\r\n      { \r\n        Object.keys(props.columns).map((column, index) => {\r\n          return ( \r\n          <div key={index}>\r\n            <label htmlFor={column}>\r\n              {column}\r\n            </label>\r\n            <input\r\n              defaultChecked={props.columns?.[column] ? true : false}\r\n              id={'checkbox_'+column}\r\n              name={column}\r\n              value=\"hide\"\r\n              onChange={() => {onCheckboxClick(this.id)}}\r\n              type=\"checkbox\" />\r\n          </div>)\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EACtC,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC7B;IACA,IAAIC,YAAY,GAACC,QAAQ,CAACC,cAAc,CAAC,WAAW,GAACH,CAAC,CAAC,CAACI,KAAK;IAC7D,IAAGH,YAAY,KAAG,MAAM,EACxB;MACE,IAAII,OAAO,GAACH,QAAQ,CAACI,sBAAsB,CAACN,CAAC,CAAC;MAC9C,KAAI,IAAIO,CAAC,GAAC,CAAC,EAACA,CAAC,GAACF,OAAO,CAACG,MAAM,EAACD,CAAC,EAAE,EAChC;QACAF,OAAO,CAACE,CAAC,CAAC,CAACE,KAAK,CAACC,OAAO,GAAC,MAAM;MAC/B;MACAR,QAAQ,CAACC,cAAc,CAACH,CAAC,GAAC,OAAO,CAAC,CAACS,KAAK,CAACC,OAAO,GAAC,MAAM;MACvDR,QAAQ,CAACC,cAAc,CAAC,WAAW,GAACH,CAAC,CAAC,CAACI,KAAK,GAAC,MAAM;IAErD,CAAC,MAGD;MACEO,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,IAAIP,OAAO,GAACH,QAAQ,CAACI,sBAAsB,CAACN,CAAC,CAAC;MAC9C,KAAI,IAAIO,CAAC,GAAC,CAAC,EAACA,CAAC,GAACF,OAAO,CAACG,MAAM,EAACD,CAAC,EAAE,EAChC;QACAF,OAAO,CAACE,CAAC,CAAC,CAACE,KAAK,CAACC,OAAO,GAAC,YAAY;MACrC;MACAR,QAAQ,CAACC,cAAc,CAACH,CAAC,GAAC,OAAO,CAAC,CAACS,KAAK,CAACC,OAAO,GAAC,YAAY;MAC7DR,QAAQ,CAACC,cAAc,CAAC,WAAW,GAACH,CAAC,CAAC,CAACI,KAAK,GAAC,MAAM;IACrD;EAEF,CAAC;;EAID;EACA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,UAE3BS,MAAM,CAACC,IAAI,CAAChB,KAAK,CAACiB,OAAO,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MAAA;MAChD,oBACA;QAAA,wBACE;UAAO,OAAO,EAAED,MAAO;UAAA,UACpBA;QAAM;UAAA;UAAA;UAAA;QAAA,QACD,eACR;UACE,cAAc,EAAE,kBAAAnB,KAAK,CAACiB,OAAO,2CAAb,eAAgBE,MAAM,CAAC,GAAG,IAAI,GAAG,KAAM;UACvD,EAAE,EAAE,WAAW,GAACA,MAAO;UACvB,IAAI,EAAEA,MAAO;UACb,KAAK,EAAC,MAAM;UACZ,QAAQ,EAAE,MAAM;YAAClB,eAAe,CAAC,IAAI,CAACoB,EAAE,CAAC;UAAA,CAAE;UAC3C,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA,GAVZD,KAAK;QAAA;QAAA;QAAA;MAAA,QAWT;IACR,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV,CAAC;AAAA,KAtDYrB,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}