{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miguel Rodrigues\\\\Desktop\\\\Mindera\\\\d4c5977c-5dde-44a4-90ab-263812cef0db\\\\src\\\\components\\\\ProductList.js\";\nimport React from 'react';\nimport data from '../assets/products.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductList = props => {\n  var columns = props.columns;\n  const filteredData = data.filter(product =>\n  //Better filter\n  //The difference is that it doesn't return an empty array when priceFrom > priceTo\n  //to avoid the table moving a lot when the user is typing the priceTo after he typed the priceFrom\n\n  props.price.priceTo && props.price.priceFrom && Number(props.price.priceTo) > Number(props.price.priceFrom) ? Number(product.price) <= Number(props.price.priceTo) : props.price.priceTo && !props.price.priceFrom ? Number(product.price) <= Number(props.price.priceTo) : true && (!props.price.priceFrom || Number(product.price) >= Number(props.price.priceFrom))\n\n  /*\r\n  *Simplified filter\r\n  (!props.price.priceFrom || Number(product.price) >= Number(props.price.priceFrom) )\r\n  &&\r\n  (!props.price.priceTo || Number(product.price) <= Number(props.price.priceTo))\r\n  */);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"product-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Product List (\", filteredData.length, \" items)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.entries(columns).map(_ref => {\n            let [k, v] = _ref;\n            return v && /*#__PURE__*/_jsxDEV(\"th\", {\n              id: k,\n              className: \"\",\n              children: k\n            }, k, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredData.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.entries(columns).map((_ref2, index) => {\n            var _product$k;\n            let [k, v] = _ref2;\n            return v && /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_product$k = product[k]) !== null && _product$k !== void 0 ? _product$k : 'TBD'\n            }, `data_${index}_${k}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 22\n            }, this);\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","data","ProductList","props","columns","filteredData","filter","product","price","priceTo","priceFrom","Number","length","Object","entries","map","k","v","index"],"sources":["C:/Users/Miguel Rodrigues/Desktop/Mindera/d4c5977c-5dde-44a4-90ab-263812cef0db/src/components/ProductList.js"],"sourcesContent":["import React from 'react'\r\nimport data from '../assets/products.json'\r\n\r\nexport const ProductList = (props) => {\r\n  var columns = props.columns;\r\n\r\n\r\n  const filteredData = data.filter((product) => \r\n\r\n      //Better filter\r\n      //The difference is that it doesn't return an empty array when priceFrom > priceTo\r\n      //to avoid the table moving a lot when the user is typing the priceTo after he typed the priceFrom\r\n      \r\n      props.price.priceTo && props.price.priceFrom && Number(props.price.priceTo) > Number(props.price.priceFrom)\r\n      ? Number(product.price) <= Number(props.price.priceTo)\r\n      : props.price.priceTo && !props.price.priceFrom\r\n      ? Number(product.price) <= Number(props.price.priceTo)\r\n      : true && (!props.price.priceFrom || Number(product.price) >= Number(props.price.priceFrom))\r\n  \r\n      /*\r\n      *Simplified filter\r\n      (!props.price.priceFrom || Number(product.price) >= Number(props.price.priceFrom) )\r\n      &&\r\n      (!props.price.priceTo || Number(product.price) <= Number(props.price.priceTo))\r\n      */\r\n  )\r\n\r\n  return (\r\n    <div id=\"product-list\">\r\n      <header>\r\n        <strong>Product List ({filteredData.length} items)</strong>\r\n      </header>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n          {\r\n            Object.entries(columns).map(([k,v]) =>(\r\n              v && <th key={k} id={k} className=\"\">{k}</th>\r\n            ))\r\n          }\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n          \r\n          filteredData.map((product, index) => (\r\n            <tr key={index} >\r\n              {  Object.entries(columns).map(([k,v],index) =>(\r\n                v && <td key={`data_${index}_${k}`}>{product[k] ?? 'TBD'}</td>\r\n              ))}\r\n            </tr>\r\n          ))\r\n        }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,yBAAyB;AAAA;AAE1C,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK;EACpC,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;EAG3B,MAAMC,YAAY,GAAGJ,IAAI,CAACK,MAAM,CAAEC,OAAO;EAErC;EACA;EACA;;EAEAJ,KAAK,CAACK,KAAK,CAACC,OAAO,IAAIN,KAAK,CAACK,KAAK,CAACE,SAAS,IAAIC,MAAM,CAACR,KAAK,CAACK,KAAK,CAACC,OAAO,CAAC,GAAGE,MAAM,CAACR,KAAK,CAACK,KAAK,CAACE,SAAS,CAAC,GACzGC,MAAM,CAACJ,OAAO,CAACC,KAAK,CAAC,IAAIG,MAAM,CAACR,KAAK,CAACK,KAAK,CAACC,OAAO,CAAC,GACpDN,KAAK,CAACK,KAAK,CAACC,OAAO,IAAI,CAACN,KAAK,CAACK,KAAK,CAACE,SAAS,GAC7CC,MAAM,CAACJ,OAAO,CAACC,KAAK,CAAC,IAAIG,MAAM,CAACR,KAAK,CAACK,KAAK,CAACC,OAAO,CAAC,GACpD,IAAI,KAAK,CAACN,KAAK,CAACK,KAAK,CAACE,SAAS,IAAIC,MAAM,CAACJ,OAAO,CAACC,KAAK,CAAC,IAAIG,MAAM,CAACR,KAAK,CAACK,KAAK,CAACE,SAAS,CAAC;;EAE3F;AACN;AACA;AACA;AACA;AACA,IALM,CAMH;;EAED,oBACE;IAAK,EAAE,EAAC,cAAc;IAAA,wBACpB;MAAA,uBACE;QAAA,6BAAuBL,YAAY,CAACO,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA;IAAiB;MAAA;MAAA;MAAA;IAAA,QACpD,eACT;MAAA,wBACE;QAAA,uBACE;UAAA,UAEEC,MAAM,CAACC,OAAO,CAACV,OAAO,CAAC,CAACW,GAAG,CAAC;YAAA,IAAC,CAACC,CAAC,EAACC,CAAC,CAAC;YAAA,OAChCA,CAAC,iBAAI;cAAY,EAAE,EAAED,CAAE;cAAC,SAAS,EAAC,EAAE;cAAA,UAAEA;YAAC,GAAzBA,CAAC;cAAA;cAAA;cAAA;YAAA,QAA8B;UAAA,CAC9C;QAAC;UAAA;UAAA;UAAA;QAAA;MAEC;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UAGEX,YAAY,CAACU,GAAG,CAAC,CAACR,OAAO,EAAEW,KAAK,kBAC9B;UAAA,UACKL,MAAM,CAACC,OAAO,CAACV,OAAO,CAAC,CAACW,GAAG,CAAC,QAAOG,KAAK;YAAA;YAAA,IAAX,CAACF,CAAC,EAACC,CAAC,CAAC;YAAA,OACnCA,CAAC,iBAAI;cAAA,wBAAgCV,OAAO,CAACS,CAAC,CAAC,mDAAI;YAAK,GAAzC,QAAOE,KAAM,IAAGF,CAAE,EAAC;cAAA;cAAA;cAAA;YAAA,QAA4B;UAAA,CAC/D;QAAC,GAHKE,KAAK;UAAA;UAAA;UAAA;QAAA,QAKf;MAAC;QAAA;QAAA;QAAA;MAAA,QAEI;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAA,KAtDYhB,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}